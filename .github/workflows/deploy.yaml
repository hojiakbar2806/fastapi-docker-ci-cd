name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout

      - name: Check if Dockerfile or docker-compose.yml changed
        id: check-changes
        run: |
          git fetch origin main
          git diff --name-only HEAD $(git merge-base HEAD origin/main) > changes.txt
          if grep -qE 'Dockerfile|docker-compose.yml' changes.txt; then
            echo "Dockerfile or docker-compose.yml changed"
            echo "needs_build=true" >> $GITHUB_ENV
          else
            echo "No changes in Dockerfile or docker-compose.yml"
            echo "needs_build=false" >> $GITHUB_ENV
          fi

      - name: Set up environment-specific .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        if: env.needs_build == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.CONTAINER_NAME }}:latest

      - name: Deploy to AWS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling the latest Docker image..."
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.CONTAINER_NAME }}:latest

            echo "Stopping and removing old container if exists..."
            sudo docker stop fastapi || true
            sudo docker rm fastapi || true

            echo "Running new container..."
            sudo docker run -d --name fastapi --env-file .env ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.CONTAINER_NAME }}:latest

            echo "Listing running containers..."
            sudo docker ps
